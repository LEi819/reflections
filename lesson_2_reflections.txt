1.What happens when you initialize a repository? Why do you need to do it?
It creates a repository but there is no commit in it.
So we are able to make commit for all the files inside the repository.

2.How is the staging area different from the working directory and the repository? What value do you think it offers?
Staging area is like a buffer between working direcory and repository.

3.How can you use the staging area to make sure you have one commit per logical change?
After I make a logical change to a file in working directory, I will use command git add to add it to staging area and use command git commit to add a commit for the logical change.

4.What are some situations when branches would be helpful in keeping your history organized? How would branches help?
When you want to create experimental versions or versions in different languages, branches would be helpful. 

5.How do the diagrams help you visualize the branch structure?
It points out any detached commits.

6.What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
It results in a new commit

7.What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
Pro:ease the jobs of the users
con:may cause error. when different changes apply to the same part of the code, it is difficult for Git to choose which one to use.